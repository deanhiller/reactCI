version: 2.1
jobs:
  node:
    working_directory: ~/reactCI
    docker:
      - image: cimg/node:12.16

    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            /bin/bash -c yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/reactCI
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  macos-build-and-test:
    working_directory: ~/reactCI
    macos:
      xcode: 11.3.0
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: test

    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      #Pods directory is ignored to match default RN setup, but can also check them into source control
      #https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
      - restore_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}

      - run: 
          command: pod install
          working_directory: ios

      - run: 
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - mobile/reactNative/deansTestProject/vendor/bundle

      - save_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
          paths:
            - ios/Pods

      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
          working_directory: ios

      - store_artifacts:
          path: output
          
      - store_test_results:
          path: scan
            
  android-build-and-test:
    working_directory: ~/reactCI
    docker:
      - image: circleci/android:api-29-node

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout:
          path: ~/reactCI

      - attach_workspace:
          at: ~/reactCI

      - run: echo "A first hello to branch $CIRCLE_BRANCH build=$CIRCLE_BUILD_NUM"
      - run:
          name: Mono Build
          command: |
            ./monobuild.sh -Pstaging=true

      - run: git checkout master

      #NOW continue and merge good tempBranch into master and push so changes are there regardless of deployment failures
      - run: git checkout master
      - run: git merge --no-edit tempBranch
      - run: git push
      - run: git push origin --delete $CIRCLE_BRANCH

      - store_artifacts:
          path: android/app/build/outputs/apk/release

workflows:
  node-android-ios:
    jobs:
      - node:
          filters:
            branches:
              only:
                - /submit_.*/
      - android-build-and-test:
          requires:
            - node
#NOT until we have a paid plan...
#      - macos-build-and-test:
#          requires:
#            - node

